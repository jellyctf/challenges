worker_processes 4;
events {
  worker_connections 1024;
}

http {
  # Configuration containing list of application servers
  #upstream app_servers {
  #  server ctfd:8000;
  #}

  # .11 = docker dns, force refresh every 10s instead of ttl
  resolver 127.0.0.11 valid=10s;

  real_ip_header CF-Connecting-IP;
  set_real_ip_from 173.245.48.0/20;
  set_real_ip_from 103.21.244.0/22;
  set_real_ip_from 103.22.200.0/22;
  set_real_ip_from 103.31.4.0/22;
  set_real_ip_from 141.101.64.0/18;
  set_real_ip_from 108.162.192.0/18;
  set_real_ip_from 190.93.240.0/20;
  set_real_ip_from 188.114.96.0/20;
  set_real_ip_from 197.234.240.0/22;
  set_real_ip_from 198.41.128.0/17;
  set_real_ip_from 162.158.0.0/15;
  set_real_ip_from 104.16.0.0/13;
  set_real_ip_from 104.24.0.0/14;
  set_real_ip_from 172.64.0.0/13;
  set_real_ip_from 131.0.72.0/22;
  set_real_ip_from 2400:cb00::/32;
  set_real_ip_from 2606:4700::/32;
  set_real_ip_from 2803:f800::/32;
  set_real_ip_from 2405:b500::/32;
  set_real_ip_from 2405:8100::/32;
  set_real_ip_from 2a06:98c0::/29;
  set_real_ip_from 2c0f:f248::/32;


  log_format main '$remote_addr [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" $host "$http_cookie" $request_time';
  # redirects to stdout in docker
  access_log /var/log/nginx/access.log main;
  access_log /var/log/nginx/access2.log main;

  server {
    listen 443 ssl;
    server_name aidoru.jellyc.tf;
    ssl_certificate /etc/nginx/jellyctf.pub;
    ssl_certificate_key /etc/nginx/jellyctf.key;
    location / {
	    set $backend_aidoru aidoru;
            proxy_pass http://$backend_aidoru:8080;
    }
  }
  server {
    listen 443 ssl;
    server_name awafy-me.jellyc.tf;
    ssl_certificate /etc/nginx/jellyctf.pub;
    ssl_certificate_key /etc/nginx/jellyctf.key;
    location / {
	    set $backend_awafy_me awafy-me;
            proxy_pass http://$backend_awafy_me:8080;
    }
  }
  server {
    listen 443 ssl;
    server_name awascii-validator.jellyc.tf;
    ssl_certificate /etc/nginx/jellyctf.pub;
    ssl_certificate_key /etc/nginx/jellyctf.key;
    location / {
	    set $backend_awascii_validator awascii-validator;
            proxy_pass http://$backend_awascii_validator:8080;
    }
  }
  server {
    listen 443 ssl;
    server_name bro-visited-his-site.jellyc.tf;
    ssl_certificate /etc/nginx/jellyctf.pub;
    ssl_certificate_key /etc/nginx/jellyctf.key;
    location / {
	    set $backend_bro_visited_his_site bro-visited-his-site;
            proxy_pass http://$backend_bro_visited_his_site:8080;
    }
  }
  server {
    listen 443 ssl;
    server_name factory-clicker.jellyc.tf;
    ssl_certificate /etc/nginx/jellyctf.pub;
    ssl_certificate_key /etc/nginx/jellyctf.key;
    location / {
	    set $backend_factory_clicker factory-clicker;
            proxy_pass http://$backend_factory_clicker:8080;
    }
  }
  server {
    listen 443 ssl;
    server_name just-win-lol.jellyc.tf;
    ssl_certificate /etc/nginx/jellyctf.pub;
    ssl_certificate_key /etc/nginx/jellyctf.key;
    location / {
	    set $backend_just_win_lol just-win-lol;
            proxy_pass http://$backend_just_win_lol:8080;
    }
  }
  server {
    listen 443 ssl;
    server_name pentest-on-stream.jellyc.tf;
    ssl_certificate /etc/nginx/jellyctf.pub;
    ssl_certificate_key /etc/nginx/jellyctf.key;
    location / {
	    set $backend_pentest_on_stream pentest-on-stream;
            proxy_pass http://$backend_pentest_on_stream:8080;
    }
  }
  server {
    listen 443 ssl;
    server_name pentest-on-stream2.jellyc.tf;
    ssl_certificate /etc/nginx/jellyctf.pub;
    ssl_certificate_key /etc/nginx/jellyctf.key;
    location / {
	    set $backend_pentest_on_stream2 pentest-on-stream2;
            proxy_pass http://$backend_pentest_on_stream2:8080;
    }
  }
  server {
    listen 443 ssl;
    server_name vlookup-hot-singles.jellyc.tf;
    ssl_certificate /etc/nginx/jellyctf.pub;
    ssl_certificate_key /etc/nginx/jellyctf.key;
    location / {
	    set $backend_vlookup_hot_singles vlookup-hot-singles;
            proxy_pass http://$backend_vlookup_hot_singles:8080;
    }
  }
  server {
    listen 443 ssl;
    server_name cherry.jellyc.tf;
    ssl_certificate /etc/nginx/jellyctf.pub;
    ssl_certificate_key /etc/nginx/jellyctf.key;
    location / {
	    set $backend_cherry cherry;
            proxy_pass http://$backend_cherry:8080;
    }
  }

  server {
    #listen 80;
    listen 443 ssl;
    server_name jellyc.tf;
    ssl_certificate /etc/nginx/jellyctf.pub;
    ssl_certificate_key /etc/nginx/jellyctf.key;
    #ssl_verify_client on;
    #ssl_client_certificate /etc/nginx/cf.pub;

    gzip on;

    client_max_body_size 4G;

    # Handle Server Sent Events for Notifications
    location /events {
      set $backend_ctfd ctfd;
      proxy_pass http://ctfd:8000;
      proxy_set_header Connection '';
      proxy_http_version 1.1;
      chunked_transfer_encoding off;
      proxy_buffering off;
      proxy_cache off;
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
    }

    # Proxy connections to the application servers
    location / {
      set $backend_ctfd ctfd;
      proxy_pass http://ctfd:8000;
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
    }
  }
  server {
    #listen 80;
    listen 443 ssl;
    server_name www.jellyc.tf;
    ssl_certificate /etc/nginx/jellyctf.pub;
    ssl_certificate_key /etc/nginx/jellyctf.key;
    #ssl_verify_client on;
    #ssl_client_certificate /etc/nginx/cf.pub;

    location / {
	    return 301 https://jellyc.tf;
    }
  }
}
