#!/usr/bin/env python3
from flask import Flask, request, send_file, url_for, make_response, send_from_directory
from flask_limiter import Limiter
from flask_limiter.util import get_remote_address
from rq import Queue
from rq.job import Job
from obs_worker import conn, refresh_and_screenshot_chat


app = Flask(__name__)
q = Queue(connection=conn)
limiter = Limiter(
    get_remote_address,
    app=app,
    storage_uri="redis://localhost:6379/2",
    strategy="moving-window"
)

@app.route("/")
def index():
    return make_response(send_file("index.html"))

@app.route('/static/<path:path>')
def send_static(path):
    return send_from_directory('static', path)

@app.route("/donate", methods=['POST'])
@limiter.limit("1 per 9 seconds") # slight leeway
def donate():
    name = request.form.get("name")[:30]
    message = request.form.get("message")[:255]
    job = q.enqueue_call(
        func=refresh_and_screenshot_chat,
        args=(name, message,)
        )
    job_url = url_for("job_status", job_id=job.get_id())
    return f'<div id="output" hx-indicator="#indicator" hx-get="{job_url}" hx-trigger="load delay:{job.get_position() or 0 + 1}s"><img src="/static/oval.svg"></div>'

@app.route("/status/<job_id>")
def job_status(job_id):
    job = Job.fetch(job_id, connection=conn)
    job_url = url_for("job_status", job_id=job.get_id())
    if job.is_finished:
        return f'<img src="{str(job.result)}">', 200
    else:
        return f'<div id="output" hx-indicator="#indicator" hx-get="{job_url}" hx-trigger="load delay:{job.get_position() or 0 + 1}s"><img src="/static/oval.svg"></div>', 202

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8080)